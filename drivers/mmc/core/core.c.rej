--- drivers/mmc/core/core.c	2013-06-24 02:50:47.000000000 -0600
+++ drivers/mmc/core/core.c	2013-08-01 23:38:03.000000000 -0600
@@ -278,6 +278,7 @@
 	unsigned long flags;
 	int timeout;
 	int is_storage_encrypting = 0;
+	int urgent_bkops = 0;
 
 	BUG_ON(!card);
 	if (!card->ext_csd.bkops_en || !(card->host->caps2 & MMC_CAP2_BKOPS))
@@ -290,12 +291,14 @@
 		spin_lock_irqsave(&card->host->lock, flags);
 		mmc_card_clr_check_bkops(card);
 		spin_unlock_irqrestore(&card->host->lock, flags);
-		if (mmc_is_exception_event(card, EXT_CSD_URGENT_BKOPS) || is_storage_encrypting)
+		urgent_bkops = mmc_is_exception_event(card, EXT_CSD_URGENT_BKOPS);
+		if (urgent_bkops || card->host->bkops_check_status || is_storage_encrypting) {
 			if (card->ext_csd.raw_bkops_status >= EXT_CSD_BKOPS_LEVEL_2 || is_storage_encrypting) {
 				spin_lock_irqsave(&card->host->lock, flags);
 				mmc_card_set_need_bkops(card);
 				spin_unlock_irqrestore(&card->host->lock, flags);
 			}
+		}
 	}
 
 	if (mmc_card_doing_bkops(card) || !mmc_card_need_bkops(card) || card->host->bkops_trigger == ENCRYPT_MAGIC_NUMBER2) {
@@ -313,7 +316,8 @@
 	if (is_storage_encrypting)
 		timeout = 50000;
 
-	pr_info("%s: %s\n", mmc_hostname(card->host), __func__);
+	pr_info("%s: %s, level %d\n", mmc_hostname(card->host), __func__,
+		card->ext_csd.raw_bkops_status);
 	err = mmc_switch(card, EXT_CSD_CMD_SET_NORMAL,
 			EXT_CSD_BKOPS_START, 1, timeout);
 	if (err) {
@@ -2290,7 +2294,7 @@
 		}
 	}
 #ifdef CONFIG_PM_RUNTIME
-       if (mmc_bus_manual_resume(host))
+       if (mmc_bus_manual_resume(host) && !host->bkops_started)
                host->bus_resume_flags |= MMC_BUSRESUME_NEEDS_RESUME;
 #endif
 
@@ -2369,17 +2373,30 @@
 						__func__, status, err, host->bkops_timer.need_bkops);
 					err = -EBUSY;
 				} else {
-					if (host->bkops_timer.need_bkops == 0)
-						host->bkops_count++;
 					pr_warning("%s: card ready status %x needbkops %u bkops_count %d\n",
 						__func__, status, host->bkops_timer.need_bkops, host->bkops_count);
 				}
 			}
 		} else {
-			host->bkops_count++;
-			pr_warning("%s: needbkops %u, bkops_count %d\n",
+			pr_debug("%s: needbkops %u, bkops_count %d\n",
 						__func__, host->bkops_timer.need_bkops, host->bkops_count);
-			host->bkops_timer.need_bkops = 0;
+			if (host->long_bkops && (mmc_read_bkops_status(host->card) == 0)) {
+				host->bkops_count++;
+				pr_info("%s: bkops_status %d, count %d\n", mmc_hostname(host),
+					host->card->ext_csd.raw_bkops_status, host->bkops_count);
+				if (host->card->ext_csd.raw_bkops_status == EXT_CSD_BKOPS_LEVEL_0) {
+					if (host->bkops_count > 20) {
+						pr_debug("%s: set need_bkops 0\n", mmc_hostname(host));
+						host->bkops_timer.need_bkops = 0;
+						host->bkops_count = 0;
+					}
+				} else
+					host->bkops_count = 0;
+			} else {
+				pr_debug("%s: set need_bkops 0\n", mmc_hostname(host));
+				host->bkops_timer.need_bkops = 0;
+				host->bkops_count = 0;
+			}
 		}
 	} else
 		pr_err("%s: mmc_send_status fail err= %d\n", __func__, err);
@@ -2402,7 +2419,8 @@
 
 	mmc_bus_get(host);
 	if (mmc_bus_manual_resume(host)) {
-		host->bus_resume_flags |= MMC_BUSRESUME_NEEDS_RESUME;
+		if (!host->bkops_started)
+			host->bus_resume_flags |= MMC_BUSRESUME_NEEDS_RESUME;
 		mmc_bus_put(host);
 		return 0;
 	}
