--- drivers/gpu/msm/kgsl_pwrscale_trustzone.c	2013-06-24 02:50:46.000000000 -0600
+++ drivers/gpu/msm/kgsl_pwrscale_trustzone.c	2013-08-01 23:38:02.000000000 -0600
@@ -35,12 +35,13 @@
 spinlock_t tz_lock;
 
 #define FLOOR			5000
+#define CEILING			50000
 #define SWITCH_OFF		200
 #define SWITCH_OFF_RESET_TH	40
 #define SKIP_COUNTER		500
 #define TZ_RESET_ID		0x3
 #define TZ_UPDATE_ID		0x4
-#define TZ_CMD_ID		0x90
+#define TZ_CMD_ID              0x90
 
 #define PARAM_INDEX_WRITE_DOWNTHRESHOLD 100
 #define PARAM_INDEX_WRITE_UPTHRESHOLD 101
@@ -235,8 +236,8 @@
 }
 
 static ssize_t dcvs_init_idle_vector_show(struct kgsl_device *device,
-			struct kgsl_pwrscale *pwrscale,
-			char *buf)
+				struct kgsl_pwrscale *pwrscale,
+				char *buf)
 {
 	int val, ret;
 
@@ -247,8 +248,8 @@
 }
 
 static ssize_t dcvs_init_idle_vector_store(struct kgsl_device *device,
-			struct kgsl_pwrscale *pwrscale,
-			const char *buf, size_t count)
+				struct kgsl_pwrscale *pwrscale,
+				const char *buf, size_t count)
 {
 	int val, ret;
 
@@ -387,8 +388,8 @@
 }
 
 static ssize_t dcvs_downthreshold_count_store(struct kgsl_device *device,
-struct kgsl_pwrscale *pwrscale,
-const char *buf, size_t count)
+				struct kgsl_pwrscale *pwrscale,
+				const char *buf, size_t count)
 {
 	int val, ret;
 
@@ -474,17 +475,19 @@
 		priv->no_switch_cnt = 0;
 	}
 
-	idle = priv->bin.total_time - priv->bin.busy_time;
+	if (priv->bin.busy_time > CEILING) {
+		val = -1;
+	} else {
+		idle = priv->bin.total_time - priv->bin.busy_time;
+		idle = (idle > 0) ? idle : 0;
+		
+		total_time = stats.total_time & 0x0FFFFFFF;
+		total_time |= (pwr->active_pwrlevel) << 28;
+
+		val = __secure_tz_entry(TZ_UPDATE_ID, idle, total_time);
+	}
 	priv->bin.total_time = 0;
 	priv->bin.busy_time = 0;
-	idle = (idle > 0) ? idle : 0;
-
-	
-	total_time = stats.total_time & 0x0FFFFFFF;
-	total_time |= (pwr->active_pwrlevel) << 28;
-
-	val = __secure_tz_entry(TZ_UPDATE_ID, idle, total_time);
-
 	if (val)
 		kgsl_pwrctrl_pwrlevel_change(device,
 					     pwr->active_pwrlevel + val);
