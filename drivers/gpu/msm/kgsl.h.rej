--- drivers/gpu/msm/kgsl.h	2013-06-24 02:50:46.000000000 -0600
+++ drivers/gpu/msm/kgsl.h	2013-08-01 23:38:02.000000000 -0600
@@ -142,10 +162,13 @@
 
 #define KGSL_MEMDESC_GUARD_PAGE BIT(0)
 #define KGSL_MEMDESC_GLOBAL BIT(1)
+#define KGSL_MEMDESC_FROZEN BIT(2)
+#define KGSL_MEMDESC_MAPPED BIT(3)
 
 struct kgsl_memdesc {
 	struct kgsl_pagetable *pagetable;
-	void *hostptr;
+	void *hostptr; 
+	unsigned long useraddr; 
 	unsigned int gpuaddr;
 	unsigned int physaddr;
 	unsigned int size;
@@ -171,29 +194,28 @@
 #define KGSL_MEM_ENTRY_MAX     7
 #else
 enum {
-KGSL_MEM_ENTRY_KERNEL = 0,
-KGSL_MEM_ENTRY_PMEM,
-KGSL_MEM_ENTRY_ASHMEM,
-KGSL_MEM_ENTRY_USER,
-KGSL_MEM_ENTRY_ION,
-KGSL_MEM_ENTRY_PAGE_ALLOC,
-KGSL_MEM_ENTRY_PRE_ALLOC,
-KGSL_MEM_ENTRY_MAX,
+	KGSL_MEM_ENTRY_KERNEL = 0,
+	KGSL_MEM_ENTRY_PMEM,
+	KGSL_MEM_ENTRY_ASHMEM,
+	KGSL_MEM_ENTRY_USER,
+	KGSL_MEM_ENTRY_ION,
+	KGSL_MEM_ENTRY_PAGE_ALLOC,
+	KGSL_MEM_ENTRY_PRE_ALLOC,
+	KGSL_MEM_ENTRY_MAX,
 };
 #endif
 
-
-#define KGSL_MEM_ENTRY_FROZEN (1 << 0)
-
 struct kgsl_mem_entry {
 	struct kref refcount;
 	struct kgsl_memdesc memdesc;
 	int memtype;
-	int flags;
 	void *priv_data;
 	struct rb_node node;
+	unsigned int id;
 	unsigned int context_id;
 	struct kgsl_process_private *priv;
+	
+	int pending_free;
 };
 
 #ifdef CONFIG_MSM_KGSL_MMU_PAGE_FAULT
@@ -214,16 +236,16 @@
 
 void kgsl_get_memory_usage(char *str, size_t len, unsigned int memflags);
 
-int kgsl_add_event(struct kgsl_device *device, u32 id, u32 ts,
-	void (*cb)(struct kgsl_device *, void *, u32, u32), void *priv,
-	void *owner);
+void kgsl_signal_event(struct kgsl_device *device,
+		struct kgsl_context *context, unsigned int timestamp,
+		unsigned int type);
+
+void kgsl_signal_events(struct kgsl_device *device,
+		struct kgsl_context *context, unsigned int type);
 
 void kgsl_cancel_events(struct kgsl_device *device,
 	void *owner);
 
-void kgsl_cancel_events_ctxt(struct kgsl_device *device,
-	struct kgsl_context *context);
-
 extern const struct dev_pm_ops kgsl_pm_ops;
 
 struct early_suspend;
